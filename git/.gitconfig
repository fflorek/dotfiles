[user]
	email = florek@florkiewicz.me
	name = MikoÅ‚aj Florkiewicz

[alias]
	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"

	lgg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'

	fuck = !"git reset HEAD --hard && git clean -df"
	ss = status -s -b

	co = checkout
	br = branch
	ct = commit
	st = status

	purr = pull --rebase
	puff = pull --ff-only
	difff = diff --color-words
	bbranch = branch -v
	branches = branch -avvl
	sth = stash -u
	unstage = reset HEAD --
	alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1 => \\2/' | grep -v 'alias'| awk 'BEGIN { FS = \"=>\" }{ printf(\"%-20s=>%s\\n\", $1,$2)}'|sort

	whois = "!sh -c 'git log -i -1 --pretty=\"format::%an <%ae>\n\" --author=\"$1\"' -"
	whatis = show -s --pretty='tformat::%h (%s, %ad)' --date=short
	howmany = "!sh -c 'git log -a --pretty=oneline | wc -l'"
	howmanybywhom = shortlog -sn



	anychanges = !sh -c 'git fetch' && git log --oneline HEAD..origin/$1
	anychangesonmaster = !sh -c 'git fetch' && git log --oneline HEAD..origin/master
	whoischanging = !sh -c 'git shortlog HEAD..origin/$0'
	whoischangingmaster = !sh -c 'git shortlog HEAD..origin/master'

	hide = update-index --assume-unchanged
	unhide = update-index --no-assume-unchanged

	find = !sh -c 'git ls-tree -r --name-only HEAD | grep --color $1' -

	cleanup = !git branch --merged=master | grep -Ev '^\\* | master$' | xargs -r git branch -d

	check-whitespace = !git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

	issues = "!f() { : git log ; echo 'Printing issue keys'; git log --oneline $@ | egrep -o [A-Z]+-[0-9]+ | sort | uniq; }; f"

	branch-name = "!git rev-parse --abbrev-ref HEAD"
	publish = "!sh -c 'git push -u ${1:-origin} $(git branch-name)' -"
	unpublish = "!sh -c 'set -e; git push ${1:-origin} :$(git branch-name);git branch --unset-upstream $(git branch-name)' -"
	exec = "!exec "

	root = "rev-parse --show-toplevel"

[rebase]
	autosquash = true
[color]
	ui = auto
[push]
	default = simple
[core]
	excludesfile = /home/vfisdk/.gitexclude_global
	pager = less -R
[pull]
	rebase = true
[apply]
	whitespace = nowarn
[help]
	autocorrect = 1
[rerere]
	enabled = true
